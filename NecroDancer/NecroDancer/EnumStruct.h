#pragma once
//#include "Enemy.h"
class Enemy;
enum tagTILE
{
	TILE_BASE1,
	TILE_BASE2,
	TILE_BASE3,
	TILE_BASE4,
	TILE_BASE5,
	TILE_BASE6
};
enum tagBLOCK
{
	BLOCK_BASE1,
	BLOCK_BASE2,
	BLOCK_BASE3,
	BLOCK_BASE4,
	BLOCK_BASE5,
	BLOCK_BASE6,
	BLOCK_BASE7,
	BLOCK_BASE8,
	BLOCK_BASE9,
	BLOCK_BASE10,
	BLOCK_BASE11,
	BLOCK_BASE12,
	BLOCK_BASE13,
	BLOCK_BASE14,
	BLOCK_BASE15,
	BLOCK_BASE16,
	BLOCK_STONE,
	BLOCK_GOLD,
	BLOCK_STEEL,
	BLOCK_DOORFRONT,
	BLOCK_DOORTURN,
	BLOCK_END
};
enum tagTRAP
{
	TRAP_MOVEUP,
	TRAP_MOVERIGHT,
	TRAP_MOVEDOWN,
	TRAP_MOVELEFT,
	TRAP_BOOM,
	TRAP_TELEPORT,
	TRAP_NEEDLE
};
enum tagSTIPOINT
{
	START_POINT,
	END_POINT,
	ITEM_POINT
};
enum tagALTAR
{
	ALTAR_BLOOD,
	ALTAR_DICE,
	ALTAR_SKULL,
	ALTAR_GLASS,
	ALTAR_END
};
enum tagMOUSETYPE
{
	MOUSE_TYPE_NONE,
	MOUSE_TYPE_TILE,
	MOUSE_TYPE_OBJECT,
	MOUSE_TYPE_ENEMY,
};
enum tagOBJECTTYPE
{
	OBJECT_NONE,		//없음
	OBJECT_BLOCK,		//블럭
	OBJECT_TRAP,		//함정
	OBJECT_ITEM,		//아이템
	OBJECT_ALTAR,		//제단
	OBJECT_POINT		//시작지점 끝지점
};
enum tagENEMY
{
	ENEMY_SLIME_GREEN,
	ENEMY_SLIME_ICE,
	ENEMY_SLIME_FIRE,
	ENEMY_SKELETON_BASE,
	ENEMY_SKELETON_ARMORED,
	ENEMY_SKELETON_KINGHT,
	ENEMY_MONKEY_BASE,
	ENEMY_MONKEY_YELLOW,
	ENEMY_BAT_BASE,
	ENEMY_GOBLIN_BASE,
	ENEMY_MINOTAUR_BASE,
	ENEMY_DRAGON_GREEN,
	ENEMY_DRAGON_BLUE,
	ENEMY_CHEST_BASE,
	ENEMY_SHOPKEEPER,
	ENEMY_END

};
enum tagKEYBIT
{
	UP,
	DOWN,
	LEFT,
	RIGHT
};
enum tagITEMHEAD
{
	HEAD_NONE,
	HEAD_HELMET,
	HEAD_MINERS,
	HEAD_CROWN,
	HEAD_BLAST,
	HEAD_END
};
enum tagITEMBODY
{
	BODY_NONE,
	BODY_1,
	BODY_2,
	BODY_3,
	BODY_4,
	BODY_5,
	BODY_END
};
enum tagITEMWEAPON
{
	WEAPON_NONE,
	WEAPON_DAGGER_BASE,
	WEAPON_DAGGER_BLOOD,
	WEAPON_BROAD_BASE,
	WEAPON_BROAD_BLOOD,
	WEAPON_LONG_BASE,
	WEAPON_LONG_BLOOD,
	WEAPON_END
};
enum tagITEMSHOVEL
{
	SHOVEL_BASE,
	SHOVEL_BLOOD,
	SHOVEL_CRYSTAL,
	SHOVEL_TITANIUM,
	SHOVEL_END
};
enum tagITEMTORCH
{
	TORCH_NONE,
	TORCH_1,
	TORCH_2,
	TORCH_3,
	TORCH_END
};
enum tagITEMPOTION
{
	POTION_NONE,
	POTION_APPLE,
	POTION_CHEESE,
	POTION_CHICKEN,
	POTION_MEAT,
	POTION_END
};
enum tagITEMSPELL
{
	SPELL_NONE,
	SPELL_BOMB,
	SPELL_FIREBALL,
	SPELL_HEAL,
	SPELL_SHIELD,
	SPEEL_END
};
enum tagITEMSTATE
{
	ITEM_HEAD_HELMET,
	ITEM_HEAD_MINERS,
	ITEM_HEAD_CROWN,
	ITEM_HEAD_BLAST,
	ITEM_BODY_1,
	ITEM_BODY_2,
	ITEM_BODY_3,
	ITEM_BODY_4,
	ITEM_BODY_5,
	ITEM_WEAPON_DAGGER_BASE,
	ITEM_WEAPON_DAGGER_BLOOD,
	ITEM_WEAPON_BROAD_BASE,
	ITEM_WEAPON_BROAD_BLOOD,
	ITEM_WEAPON_LONG_BASE,
	ITEM_WEAPON_LONG_BLOOD,
	ITEM_SHOVEL_BASE,
	ITEM_SHOVEL_BLOOD,
	ITEM_SHOVEL_CRYSTAL,
	ITEM_SHOVEL_TITANIUM,
	ITEM_TORCH_1,
	ITEM_TORCH_2,
	ITEM_TORCH_3,
	ITEM_STATE_END
/*
	ITEM_POTION_APPLE,
	ITEM_POTION_CHEESE,
	ITEM_POTION_CHICKEN,
	ITEM_POTION_MEAT,
	ITEM_SPELL_BOMB,
	ITEM_SPELL_FIREBALL,
	ITEM_SPELL_HEAL,
	ITEM_SPELL_SHIELD,*/
};

struct TileData
{
	int tileType;		//타일 타입
	int objectType;		//오브젝트 타입
	int objectState;	//오브젝트 속성

	int x;
	int y;

	bool isEnemyUP;
};

struct InGameTileData
{
	int tileType;		//타일 타입
	int objectType;		//오브젝트 타입
	int objectKind;		//오브젝트 종류
	int objectState;	//오브젝트 속성

	bool isEnemyUP;
	bool isPlayerUP;
};


struct EnemyData
{
	int type;
	int x;
	int y;
};
struct MouseState
{
	RECT rc;
	int type;
	int objectType;
	int state;
};

#define MAPTILEX 25
#define MAPTILEY 25
#define TILESIZEX 24
#define TILESIZEY 24